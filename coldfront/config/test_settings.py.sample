import os

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

SECRET_KEY = os.environ.get('django_secret_key', '')

ALLOWED_HOSTS = ['0.0.0.0', 'localhost', 'localhost']

PORTAL_NAME = 'MyBRC'
PROGRAM_NAME_LONG = 'Berkeley Research Computing'
PROGRAM_NAME_SHORT = 'BRC'
PRIMARY_CLUSTER_NAME = 'Savio'

CENTER_NAME = PROGRAM_NAME_SHORT + ' HPC Resources'
CENTER_USER_GUIDE = 'https://docs-research-it.berkeley.edu/services/high-performance-computing/user-guide/'
CENTER_LOGIN_GUIDE = 'https://docs-research-it.berkeley.edu/services/high-performance-computing/user-guide/logging-brc-clusters/#Logging-in'
CENTER_HELP_EMAIL = 'brc-hpc-help@berkeley.edu'

CENTER_BASE_URL = 'http://localhost:8880'
CENTER_HELP_URL = CENTER_BASE_URL + '/help'
CENTER_PROJECT_RENEWAL_HELP_URL = CENTER_BASE_URL + '/help'

EMAIL_PORT = 1025
EMAIL_SUBJECT_PREFIX = '[MyBRC-User-Portal]'
# A list of admin email addresses to be notified about new requests and other
# events.
EMAIL_ADMIN_LIST = ['admin@localhost']
EMAIL_SENDER = 'test@test.test'
EMAIL_TICKET_SYSTEM_ADDRESS = 'help@localhost'
EMAIL_DIRECTOR_EMAIL_ADDRESS = 'director@localhost'
EMAIL_PROJECT_REVIEW_CONTACT = 'review@localhost'
EMAIL_DEVELOPMENT_EMAIL_LIST = ['dev1@localhost', 'dev2@localhost']
EMAIL_OPT_OUT_INSTRUCTION_URL = CENTER_BASE_URL + '/optout'
EMAIL_SIGNATURE = """
MyBRC User Portal team
http://localhost:8880
Email : test@test.test
"""

EMAIL_FROM = 'test@test.test'
EMAIL_ADMIN = 'test@test.test'
DEFAULT_FROM_EMAIL = EMAIL_FROM

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'cf_brc_db',
        'USER': 'test',
        'PASSWORD': 'test',
        'HOST': 'localhost',
        'PORT': '5432',
    },
}

LOG_PATH = '/var/log/user_portals/cf_mybrc/cf_mybrc_portal.log'
API_LOG_PATH = '/var/log/user_portals/cf_mybrc/cf_mybrc_api.log'

STREAM_LOGS_TO_STDOUT = False

# A list of admin email addresses to CC when certain requests are approved.
REQUEST_APPROVAL_CC_LIST = ['test@test.test']
# A list of admin email addresses to notify when a project-user removal request
# is processed.
PROJECT_USER_REMOVAL_REQUEST_PROCESSED_EMAIL_ADMIN_LIST = ['test@test.test']

# Extra apps to be included.
EXTRA_EXTRA_APPS = []
# Extra middleware to be included.
EXTRA_EXTRA_MIDDLEWARE = []

#------------------------------------------------------------------------------
# Django Cache settings
#------------------------------------------------------------------------------

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
    }
}

#------------------------------------------------------------------------------
# BRC Vector Settings
#------------------------------------------------------------------------------

# The username of the user to set as the PI for all Vector projects.
VECTOR_PI_USERNAME = ''

# The name of the Savio project to which all Vector users are given access.
SAVIO_PROJECT_FOR_VECTOR_USERS = ''

#------------------------------------------------------------------------------
# File Storage Settings
#------------------------------------------------------------------------------

MEDIA_ROOT = '/media/'

FILE_STORAGE = {
    'backend': 'file_system',
    'details': {
        'NEW_PROJECT_REQUEST_MOU': {
            'location': 'New Project Request MOUs/',
            'filename_type': 'NewProject_MOU',
        },
        'SERVICE_UNITS_PURCHASE_REQUEST_MOU': {
            'location': 'Service Units Purchase Request MOUs/',
            'filename_type': 'AllowancePurchase_MOU',
        },
        'SECURE_DIRECTORY_REQUEST_MOU': {
            'location': 'Secure Directory Request MOUs/',
            'filename_type': 'SecureDirectory_RUA',
        },
    },
}

#------------------------------------------------------------------------------
# Renewal Survey settings
#------------------------------------------------------------------------------

# Permit renewal requests to be made without a survey response.
RENEWAL_SURVEY = {
    'backend': 'coldfront.core.project.utils_.renewal_survey.backends.permissive.PermissiveRenewalSurveyBackend',
    'details': {},
}

#------------------------------------------------------------------------------
# SSL settings
#------------------------------------------------------------------------------

# Use a secure cookie for the session cookie (HTTPS only).
SESSION_COOKIE_SECURE = False

#------------------------------------------------------------------------------
# Django All-Auth settings
#------------------------------------------------------------------------------

CILOGON_APP_CLIENT_ID = ''
CILOGON_APP_SECRET = ''

#------------------------------------------------------------------------------
# django debug toolbar settings
#------------------------------------------------------------------------------

# IP addresses other than 127.0.0.1 that can view the django debug toolbar.
EXTRA_INTERNAL_IPS = []

#------------------------------------------------------------------------------
# django-flags settings
#------------------------------------------------------------------------------

FLAGS = {
    'ALLOCATION_RENEWAL_FOR_NEXT_PERIOD_REQUESTABLE': [
        {'condition': 'during month', 'value': '5'},
    ],
    'BASIC_AUTH_ENABLED': [{'condition': 'boolean', 'value': True}],
    'BRC_ONLY': [{'condition': 'boolean', 'value': True}],
    'LINK_LOGIN_ENABLED': [{'condition': 'boolean', 'value': False}],
    'LRC_ONLY': [{'condition': 'boolean', 'value': False}],
    'MULTIPLE_EMAIL_ADDRESSES_ALLOWED': [{'condition': 'boolean', 'value': True}],
    'SECURE_DIRS_REQUESTABLE': [{'condition': 'boolean', 'value': True}],
    'SERVICE_UNITS_PURCHASABLE': [{'condition': 'boolean', 'value': True}],
    'SSO_ENABLED': [{'condition': 'boolean', 'value': False}],
    'USER_DEPARTMENTS_ENABLED': [{'condition': 'app installed', 'value': 'coldfront.plugins.departments'}],
    'HARDWARE_PROCUREMENTS_ENABLED': [{'condition': 'app installed', 'value': 'coldfront.plugins.hardware_procurements'}],
    'MOU_GENERATION_ENABLED': [{'condition': 'boolean', 'value': False}],
    'RENEWAL_SURVEY_ENABLED': [{'condition': 'boolean', 'value': True}],
}

#------------------------------------------------------------------------------
# Plugin: departments
#------------------------------------------------------------------------------

EXTRA_EXTRA_APPS += [
    'coldfront.plugins.departments'
]

DEPARTMENTS_DEPARTMENT_DISPLAY_NAME = 'Department'
DEPARTMENTS_DEPARTMENT_DATA_SOURCE = 'coldfront.plugins.departments.utils.data_sources.backends.dummy.DummyDataSourceBackend'

#------------------------------------------------------------------------------
# Plugin: hardware_procurements
#------------------------------------------------------------------------------

EXTRA_EXTRA_APPS += [
    'coldfront.plugins.hardware_procurements'
]

HARDWARE_PROCUREMENTS_CONFIG = {
    'DATA_SOURCE': 'coldfront.plugins.hardware_procurements.utils.data_sources.backends.dummy.DummyDataSourceBackend',
    'OPTIONS': {},
}

#------------------------------------------------------------------------------
# django-q settings
#------------------------------------------------------------------------------

Q_CLUSTER = {
    'retry': 2 * 24 * 60 * 60,
    'sync': True,
    'timeout': 24 * 60 * 60,
}
