services:
  db:
    image: coldfront_db:latest
    build:
      context: .
      dockerfile: Dockerfile.db
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      LOAD_DUMP: true
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin", "-d", "${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    command: --requirepass "${REDIS_PASSWORD}"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  email:
    image: python_email:latest
    build:
      context: .
      dockerfile: Dockerfile.email 
    restart: always
    environment: 
      - PYTHONUNBUFFERED=1
    ports:
      - "1025:1025"
    healthcheck:
      test: ["CMD","netstat","-l","|","grep","1025"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: python -m smtpd -d -n -c DebuggingServer 0.0.0.0:1025 
  
  coldfront:
    image: coldfront:latest
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${COLDFRONT_PORT}:80
    volumes:
      - ./:/vagrant/coldfront_app/coldfront/
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      email:
        condition: service_healthy
    restart: unless-stopped

volumes:
  db_data:
    external: false
  redis_data:
    external: false
