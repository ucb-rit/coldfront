###############################################################################
# Ansible Settings
###############################################################################

# Types of Ansible tasks to run by default.
provisioning_tasks: true
common_tasks: true
chmod_tasks: true # Can be false when a Windows FS is mounted

###############################################################################
# General Settings
###############################################################################

domain: localhost
reponame: coldfront
djangoprojname: coldfront

enable_django_debug_toolbar: false

###############################################################################
# BRC/LRC Config
###############################################################################

# The secret key used by Django for cryptographic signing.
# TODO: Generate one using: `openssl rand -base64 64`.
django_secret_key:

#------------------------------------------------------------------------------
# PostgreSQL database settings
#------------------------------------------------------------------------------

# The name of the PostgreSQL database.
# TODO: For LRC, set this to 'cf_lrc_db'.
db_name: cf_brc_db
db_host: localhost

# The credentials for the database admin user.
# TODO: Replace the username and password.
db_admin_user: admin
db_admin_passwd: root

#------------------------------------------------------------------------------
# Redis settings
#------------------------------------------------------------------------------

# The password for Redis.
# TODO: Replace the password.
redis_passwd: root
redis_host: localhost

#------------------------------------------------------------------------------
# Logging settings
#------------------------------------------------------------------------------

# TODO: For LRC, use the substring 'cf_mylrc'.
log_path: /var/log/user_portals/cf_mybrc
portal_log_file: cf_mybrc_portal.log
api_log_file: cf_mybrc_api.log

logrotate_entry_name: cf_mybrc

# TODO: Logs are only backed up if a path to an existent directory is given.
log_backup_dir_path:

# TODO: For Docker environments, set this to true.
stream_logs_to_stdout: false

#------------------------------------------------------------------------------
# Apache settings
#------------------------------------------------------------------------------

# The name of the copy of the generated WSGI template in the Apache directory.
# TODO: For LRC, use the substring 'cf_mylrc'.
wsgi_conf_file_name: cf_mybrc_wsgi.conf
# TODO: For LRC, use the substring 'cf_lrc'.
wsgi_conf_log_prefix: cf_brc

#------------------------------------------------------------------------------
# LRC Cloudflare settings
#------------------------------------------------------------------------------

# Whether the web server is behind Cloudflare.
# TODO: For the LRC production deployment, enable Cloudflare, since LBL
# TODO: requires that web servers visible to the Internet be placed behind it.
# TODO: https://commons.lbl.gov/display/cpp/Open+Web+Server+Requirements
cloudflare_enabled: false

# A list of Cloudflare's IP ranges.
# TODO: Keep it up-to-date with: https://www.cloudflare.com/ips/.
cloudflare_ip_ranges: [
    103.21.244.0/22,
    103.22.200.0/22,
    103.31.4.0/22,
    104.16.0.0/13,
    104.24.0.0/14,
    108.162.192.0/18,
    131.0.72.0/22,
    141.101.64.0/18,
    162.158.0.0/15,
    172.64.0.0/13,
    173.245.48.0/20,
    188.114.96.0/20,
    190.93.240.0/20,
    197.234.240.0/22,
    198.41.128.0/17
]

# The name of the server, which should differ from the name of the website.
# Source: See Open Web Server Requirements link above.
# TODO: Set this to e.g., mylrc-local.lbl.gov for mylrc.lbl.gov if Cloudflare
# TODO: is enabled.
cloudflare_local_server_name:

#------------------------------------------------------------------------------
# CILogon client settings
#------------------------------------------------------------------------------

# TODO: Set these, needed only if SSO should be enabled.
cilogon_app_client_id: ""
cilogon_app_secret: ""

#------------------------------------------------------------------------------
# Django Flags settings
#------------------------------------------------------------------------------

# Note: Use uppercase True/False so that Python interprets these as booleans.

# TODO: For LRC, disable link login.
flag_basic_auth_enabled: False
flag_sso_enabled: True
flag_link_login_enabled: True

# TODO: For LRC, disable BRC and enable LRC.
flag_brc_enabled: True
flag_lrc_enabled: False

# The number of the month in which users should be able to request renewal for
# the next allowance year.
# TODO: For LRC, set the month number to 9 (September).
flag_next_period_renewal_requestable_month: 5

# Whether to enable UI support for users having multiple email addresses.
flag_multiple_email_addresses_allowed: False

# Whether to install and enable the MOU generation package.
# TODO: For BRC, enable MOU generation (requires access to the package).
flag_mou_generation_enabled: False

# Whether to include a survey as part of the allowance renewal request process.
flag_renewal_survey_enabled: True

#------------------------------------------------------------------------------
# Plugin: departments
#------------------------------------------------------------------------------

# TODO: Enable for BRC, disable for LRC.
plugin_departments_enabled: true
plugin_departments_department_display_name: "Department"
plugin_departments_department_data_source: "coldfront.plugins.departments.utils.data_sources.backends.calnet_ldap.CalNetLdapDataSourceBackend"

#------------------------------------------------------------------------------
# Plugin: hardware_procurements
#------------------------------------------------------------------------------

plugin_hardware_procurements_enabled: false

# A mapping from short names of data sources to associated module paths.
plugin_hardware_procurements_data_source_modules_by_short_name:
  cached: 'coldfront.plugins.hardware_procurements.utils.data_sources.backends.cached.CachedDataSourceBackend'
  dummy: 'coldfront.plugins.hardware_procurements.utils.data_sources.backends.dummy.DummyDataSourceBackend'
  google_sheets: 'coldfront.plugins.hardware_procurements.utils.data_sources.backends.google_sheets.GoogleSheetsDataSourceBackend'

# # TODO: Uncomment only the section relevant to the specified data source.

# # Settings: 'cached' backend.
# plugin_hardware_procurements:
#   data_source: 'cached'
#   data_source_options:
#     cache_key: 'hardware_procurements_data'
#     cached_data_source: 'google_sheets'
#     cached_data_source_options:
#       config_file_path: '/path/to/data-source-options-file.json'

# # Settings: 'google_sheets' backend.
# plugin_hardware_procurements:
#   data_source: 'google_sheets'
#   data_source_options:
#     config_file_path: '/path/to/data-source-options-file.json'

# # Settings: 'dummy' backend.
# plugin_hardware_procurements:
#   data_source: 'dummy'
#   data_source_options:

#------------------------------------------------------------------------------
# User-facing strings
#------------------------------------------------------------------------------

# TODO: For LRC, use "MyLRC", "Laboratory Research Computing", "LRC", and
# TODO: "Lawrencium".
portal_name: "MyBRC"
program_name_long: "Berkeley Research Computing"
program_name_short: "BRC"

primary_cluster_name: "Savio"

# TODO: For MyLRC, use "https://it.lbl.gov/service/scienceit/high-performance-computing/lrc/".
center_user_guide: "https://docs-research-it.berkeley.edu/services/high-performance-computing/user-guide/"
# TODO: For MyLRC, use "https://it.lbl.gov/resource/hpc/for-users/getting-started/".
center_login_guide: "https://docs-research-it.berkeley.edu/services/high-performance-computing/user-guide/logging-brc-clusters/#Logging-in"
# TODO: For MyLRC, use "hpcshelp@lbl.gov".
center_help_email: "brc-hpc-help@berkeley.edu"

#------------------------------------------------------------------------------
# BRC Vector settings
#------------------------------------------------------------------------------

# The username of the user to set as the PI for all Vector projects.
# TODO: For MyBRC, set this to a value that will be provided.
vector_pi_username: ''

# The name of the Savio project to which all Vector users are given access.
# TODO: For MyBRC, set this to a value that will be provided.
savio_project_for_vector_users: ''

#------------------------------------------------------------------------------
# BRC File storage settings
#------------------------------------------------------------------------------

# # Backend options: 'file_system', 'google_drive'
# file_storage_backend: 'file_system'

# new_project_request_mou_path: 'New Project Request MOUs/'
# secure_directory_request_mou_path: 'Secure Directory Request MOUs/'
# service_units_purchase_request_mou_path: 'Service Units Purchase Request MOUs/'

# # TODO: Uncomment only the section relevant to the specified file_system_backend.

# # Storage settings: 'file_system' backend.
# django_media_root: '/vagrant/coldfront_app/media/'

# # Storage settings: 'google_drive' backend.
# # TODO: If using this backend, set the absolute path to the private key file.
# google_drive_private_key_file_path: '/path/to/google-drive-private-key.json'
# google_drive_storage_media_root: '/'

#------------------------------------------------------------------------------
# BRC MOU generation settings
#------------------------------------------------------------------------------

# # TODO: For BRC deployments with access to the package for generating MOUs
# # TODO: (e.g., production and staging), set the absolute path to the deploy
# # TODO: key for the package.
# mou_generator_deploy_key_path: '/path/to/id_mou_generator'

#------------------------------------------------------------------------------
# LRC Billing validation settings
#------------------------------------------------------------------------------

# TODO: For LRC deployments with access to the package for billing validation
# TODO: (e.g., production and staging), set these.
install_billing_validation_package: false
# Example: "gitlab.com/user/repo_name.git"
billing_validation_repo_host: ""
# Create or request a deploy token.
# Reference: https://docs.gitlab.com/ee/user/project/deploy_tokens/
billing_validation_repo_username: ""
billing_validation_repo_token: ""

# TODO: For LRC deployments with access to the Oracle billing database, set
# TODO: these.
oracle_billing_db_dsn: ""
oracle_billing_db_user: ""
oracle_billing_db_passwd: ""

#------------------------------------------------------------------------------
# Allowance renewal survey settings
#------------------------------------------------------------------------------

# # Backend options: 'google_forms', 'permissive'
# renewal_survey_backend: 'google_forms'

# # TODO: Uncomment only the section relevant to the specified renewal_survey_backend.

# # Renewal survey settings: 'google_forms' backend.
# renewal_survey_google_forms_service_account_credentials_file_path: '/path/to/google-service-account-key.json'
# renewal_survey_google_forms_survey_data_file_path: '/path/to/google-forms-survey-data.json'
# renewal_survey_google_forms_survey_data_cache_key: 'renewal_survey_google_forms_survey_data'

# # Renewal survey settings: 'permissive' backend.
# # N/A: No applicable settings.

#------------------------------------------------------------------------------
# REST API settings
#------------------------------------------------------------------------------

# If true, bypass all checks at job submission time.
allow_all_jobs: false

#------------------------------------------------------------------------------
# Sentry settings
#------------------------------------------------------------------------------

# The URL of the Sentry instance to send errors to.
sentry_dsn: ""

###############################################################################
# Deployment-specific settings: staging, production, development
###############################################################################

# TODO: Uncomment the section pertaining to the current deployment type.

#------------------------------------------------------------------------------
# staging_settings
#------------------------------------------------------------------------------

# # The type of deployment ('dev', 'prod', 'staging').
# deployment: staging

# # The user to run commands under and set permissions using.
# djangooperator: root

# # Whether to run the Django application in DEBUG mode.
# # Note: Use uppercase True/False so that Python interprets this as a boolean.
# debug: True

# # The path to the parent directory containing the Git repository.
# git_prefix: /var/www/coldfront_app

# # Host settings.
# hostname: scgup-dev.lbl.gov
# host_ip: 131.243.130.236
# app_port: 8000
# full_host_path: http://scgup-dev.lbl.gov:8000

# # SSL settings.
# ssl_enabled: false
# ssl_certificate_file: /etc/ssl/ssl_certificate.file
# ssl_certificate_key_file: /etc/ssl/ssl_certificate_key.file
# # An optional chain file.
# ssl_certificate_chain_file: /etc/ssl/ssl_certification_chain.file

# # Zero or more space-separated IP ranges, in CIDR notation, to which the REST
# # API is accessible. If none are given, API access is not restricted.
# ip_range_with_api_access:

# # IP addresses other than 127.0.0.1 that can view the django debug toolbar.
# debug_toolbar_ips: []

# # Email settings.
# email_host: localhost
# email_port: 25
# # TODO: Set these addresses to yours.
# from_email: brc-hpc-help@berkeley.edu
# admin_email: brc-hpcs@berkeley.edu
# # TODO: For LRC, use the substring 'MyLRC'.
# email_subject_prefix: '[MyBRC-User-Portal]'

# # A list of admin email addresses to be notified about new requests and other
# # events.
# # TODO: Set these addresses to yours.
# email_admin_list: []
# # A list of email addresses to CC when certain requests are processed.
# # TODO: Set these addresses to yours.
# request_approval_cc_list: []
# # A list of email addresses to be notified when a project-user removal request
# # is processed.
# # TODO: Set these addresses to yours.
# project_user_removal_request_processed_email_admin_list: []

#------------------------------------------------------------------------------
# prod_settings
#------------------------------------------------------------------------------

# # The type of deployment ('dev', 'prod', 'staging').
# deployment: prod

# # The user to run commands under and set permissions using.
# djangooperator: meli

# # Whether to run the Django application in DEBUG mode.
# # Note: Use uppercase True/False so that Python interprets this as a boolean.
# debug: False

# # The path to the parent directory containing the Git repository.
# git_prefix: /var/www/coldfront_app

# # Host settings.
# # TODO: For LRC, use mylrc.lbl.gov.
# hostname: mybrc.brc.berkeley.edu
# # TODO: For LRC, use 128.3.7.213.
# host_ip: 136.152.224.34
# app_port: 80
# # TODO: For LRC, use https://mylrc.lbl.gov.
# full_host_path: https://mybrc.brc.berkeley.edu

# # SSL settings.
# ssl_enabled: true
# ssl_certificate_file: /etc/ssl/ssl_certificate.file
# ssl_certificate_key_file: /etc/ssl/ssl_certificate_key.file
# # An optional chain file.
# ssl_certificate_chain_file: /etc/ssl/ssl_certification_chain.file

# # Zero or more space-separated IP ranges, in CIDR notation, to which the REST
# # API is accessible. If none are given, API access is not restricted.
# ip_range_with_api_access: 10.0.0.0/8

# # IP addresses other than 127.0.0.1 that can view the django debug toolbar.
# debug_toolbar_ips: []

# # Email settings.
# email_host: localhost
# email_port: 25
# # TODO: Set these addresses to yours.
# from_email: brc-hpc-help@berkeley.edu
# admin_email: brc-hpcs@berkeley.edu
# # TODO: For LRC, use the substring 'MyLRC'.
# email_subject_prefix: '[MyBRC-User-Portal]'

# # A list of admin email addresses to be notified about new requests and other
# # events.
# # TODO: Set these addresses to yours.
# email_admin_list: []
# # A list of email addresses to CC when certain requests are processed.
# # TODO: Set these addresses to yours.
# request_approval_cc_list: []
# # A list of email addresses to be notified when a project-user removal request
# # is processed.
# # TODO: Set these addresses to yours.
# project_user_removal_request_processed_email_admin_list: []

#------------------------------------------------------------------------------
# dev_settings
#------------------------------------------------------------------------------

# # The type of deployment ('dev', 'prod', 'staging').
# deployment: dev

# # The user to run commands under and set permissions using.
# djangooperator: vagrant

# # Whether to run the Django application in DEBUG mode.
# # Note: Use uppercase True/False so that Python interprets this as a boolean.
# debug: True

# # The path to the parent directory containing the Git repository.
# git_prefix: /vagrant/coldfront_app

# # The name of the Systemd unit responsible for mounting the codebase.
# codebase_mount_systemd_unit: vagrant-coldfront_app-coldfront.mount

# # Host settings.
# hostname: localhost
# host_ip: localhost
# app_port: 80
# full_host_path: http://localhost:8880

# # SSL settings.
# ssl_enabled: false
# ssl_certificate_file: /etc/ssl/ssl_certificate.file
# ssl_certificate_key_file: /etc/ssl/ssl_certificate_key.file
# # An optional chain file.
# ssl_certificate_chain_file: /etc/ssl/ssl_certification_chain.file

# # Zero or more space-separated IP ranges, in CIDR notation, to which the REST
# # API is accessible. If none are given, API access is not restricted.
# ip_range_with_api_access:

# # IP addresses other than 127.0.0.1 that can view the django debug toolbar.
# debug_toolbar_ips: ['10.0.2.2']  # 10.0.2.2 is the vagrant host.

# # Email settings.
# email_host: localhost
# email_port: 1025
# from_email: placeholder@dev.dev
# admin_email: placeholder@dev.dev
# # TODO: For LRC, use the substring 'MyLRC'.
# email_subject_prefix: '[MyBRC-User-Portal]'

# # A list of admin email addresses to be notified about new requests and other
# # events.
# email_admin_list: ['placeholder@dev.dev']
# # A list of email addresses to CC when certain requests are processed.
# # TODO: Set these addresses to yours.
# request_approval_cc_list: ['placeholder@dev.dev']
# # A list of email addresses to be notified when a project-user removal request
# # is processed.
# project_user_removal_request_processed_email_admin_list: ['placeholder@dev.dev']
